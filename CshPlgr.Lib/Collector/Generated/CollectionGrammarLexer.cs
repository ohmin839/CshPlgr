//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CollectionGrammar.g4 by ANTLR 4.9.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace CshPlgr.Collector.Generated {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.3")]
[System.CLSCompliant(false)]
public partial class CollectionGrammarLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		LARGE_ALPHA=1, LARGE_EPSILON=2, LARGE_ETA=3, LARGE_IOTA=4, LARGE_OMICRON=5, 
		LARGE_UPSILON=6, LARGE_OMEGA=7, LARGE_RHO=8, LARGE_CONSONANT=9, SMALL_ALPHA=10, 
		SMALL_EPSILON=11, SMALL_ETA=12, SMALL_IOTA=13, SMALL_OMICRON=14, SMALL_UPSILON=15, 
		SMALL_OMEGA=16, SMALL_RHO=17, SMALL_CONSONANT=18, APOSTROPH=19, ANYCHAR=20;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"LARGE_ALPHA", "LARGE_EPSILON", "LARGE_ETA", "LARGE_IOTA", "LARGE_OMICRON", 
		"LARGE_UPSILON", "LARGE_OMEGA", "LARGE_RHO", "LARGE_CONSONANT", "SMALL_ALPHA", 
		"SMALL_EPSILON", "SMALL_ETA", "SMALL_IOTA", "SMALL_OMICRON", "SMALL_UPSILON", 
		"SMALL_OMEGA", "SMALL_RHO", "SMALL_CONSONANT", "APOSTROPH", "ANYCHAR"
	};


	public CollectionGrammarLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public CollectionGrammarLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, "'''"
	};
	private static readonly string[] _SymbolicNames = {
		null, "LARGE_ALPHA", "LARGE_EPSILON", "LARGE_ETA", "LARGE_IOTA", "LARGE_OMICRON", 
		"LARGE_UPSILON", "LARGE_OMEGA", "LARGE_RHO", "LARGE_CONSONANT", "SMALL_ALPHA", 
		"SMALL_EPSILON", "SMALL_ETA", "SMALL_IOTA", "SMALL_OMICRON", "SMALL_UPSILON", 
		"SMALL_OMEGA", "SMALL_RHO", "SMALL_CONSONANT", "APOSTROPH", "ANYCHAR"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "CollectionGrammar.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static CollectionGrammarLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x16', 'S', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', 
		'\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', 
		'\f', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', '\x11', '\x3', '\x11', 
		'\x3', '\x12', '\x3', '\x12', '\x3', '\x13', '\x3', '\x13', '\x3', '\x14', 
		'\x3', '\x14', '\x3', '\x15', '\x3', '\x15', '\x2', '\x2', '\x16', '\x3', 
		'\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', 
		'\xF', '\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', 
		'\xE', '\x1B', '\xF', '\x1D', '\x10', '\x1F', '\x11', '!', '\x12', '#', 
		'\x13', '%', '\x14', '\'', '\x15', ')', '\x16', '\x3', '\x2', '\x14', 
		'\x6', '\x2', '\x393', '\x393', '\x1F0A', '\x1F11', '\x1F8A', '\x1F91', 
		'\x1FBC', '\x1FBE', '\x5', '\x2', '\x397', '\x397', '\x1F1A', '\x1F1F', 
		'\x1FCA', '\x1FCB', '\x6', '\x2', '\x399', '\x399', '\x1F2A', '\x1F31', 
		'\x1F9A', '\x1FA1', '\x1FCC', '\x1FCE', '\x6', '\x2', '\x39B', '\x39B', 
		'\x3AC', '\x3AC', '\x1F3A', '\x1F41', '\x1FDC', '\x1FDD', '\x5', '\x2', 
		'\x3A1', '\x3A1', '\x1F4A', '\x1F4F', '\x1FFA', '\x1FFB', '\t', '\x2', 
		'\x3A7', '\x3A7', '\x3AD', '\x3AD', '\x1F5B', '\x1F5B', '\x1F5D', '\x1F5D', 
		'\x1F5F', '\x1F5F', '\x1F61', '\x1F61', '\x1FEC', '\x1FED', '\x6', '\x2', 
		'\x3AB', '\x3AB', '\x1F6A', '\x1F71', '\x1FAA', '\x1FB1', '\x1FFC', '\x1FFE', 
		'\x4', '\x2', '\x3A3', '\x3A3', '\x1FEE', '\x1FEE', '\t', '\x2', '\x394', 
		'\x396', '\x398', '\x398', '\x39A', '\x39A', '\x39C', '\x3A0', '\x3A2', 
		'\x3A2', '\x3A5', '\x3A6', '\x3A8', '\x3AA', '\b', '\x2', '\x3B3', '\x3B3', 
		'\x1F02', '\x1F09', '\x1F72', '\x1F73', '\x1F82', '\x1F89', '\x1FB4', 
		'\x1FB6', '\x1FB8', '\x1FB9', '\x5', '\x2', '\x3B7', '\x3B7', '\x1F12', 
		'\x1F17', '\x1F74', '\x1F75', '\b', '\x2', '\x3B9', '\x3B9', '\x1F22', 
		'\x1F29', '\x1F76', '\x1F77', '\x1F92', '\x1F99', '\x1FC4', '\x1FC6', 
		'\x1FC8', '\x1FC9', '\b', '\x2', '\x3BB', '\x3BB', '\x3CC', '\x3CC', '\x1F32', 
		'\x1F39', '\x1F78', '\x1F79', '\x1FD4', '\x1FD5', '\x1FD8', '\x1FD9', 
		'\x5', '\x2', '\x3C1', '\x3C1', '\x1F42', '\x1F47', '\x1F7A', '\x1F7B', 
		'\b', '\x2', '\x3C7', '\x3C7', '\x3CD', '\x3CD', '\x1F52', '\x1F59', '\x1F7C', 
		'\x1F7D', '\x1FE4', '\x1FE5', '\x1FE8', '\x1FE9', '\b', '\x2', '\x3CB', 
		'\x3CB', '\x1F62', '\x1F69', '\x1F7E', '\x1F7F', '\x1FA2', '\x1FA9', '\x1FF4', 
		'\x1FF6', '\x1FF8', '\x1FF9', '\x4', '\x2', '\x3C3', '\x3C3', '\x1FE6', 
		'\x1FE7', '\t', '\x2', '\x3B4', '\x3B6', '\x3B8', '\x3B8', '\x3BA', '\x3BA', 
		'\x3BC', '\x3C0', '\x3C2', '\x3C2', '\x3C4', '\x3C6', '\x3C8', '\x3CA', 
		'\x2', 'R', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', 
		')', '\x3', '\x2', '\x2', '\x2', '\x3', '+', '\x3', '\x2', '\x2', '\x2', 
		'\x5', '-', '\x3', '\x2', '\x2', '\x2', '\a', '/', '\x3', '\x2', '\x2', 
		'\x2', '\t', '\x31', '\x3', '\x2', '\x2', '\x2', '\v', '\x33', '\x3', 
		'\x2', '\x2', '\x2', '\r', '\x35', '\x3', '\x2', '\x2', '\x2', '\xF', 
		'\x37', '\x3', '\x2', '\x2', '\x2', '\x11', '\x39', '\x3', '\x2', '\x2', 
		'\x2', '\x13', ';', '\x3', '\x2', '\x2', '\x2', '\x15', '=', '\x3', '\x2', 
		'\x2', '\x2', '\x17', '?', '\x3', '\x2', '\x2', '\x2', '\x19', '\x41', 
		'\x3', '\x2', '\x2', '\x2', '\x1B', '\x43', '\x3', '\x2', '\x2', '\x2', 
		'\x1D', '\x45', '\x3', '\x2', '\x2', '\x2', '\x1F', 'G', '\x3', '\x2', 
		'\x2', '\x2', '!', 'I', '\x3', '\x2', '\x2', '\x2', '#', 'K', '\x3', '\x2', 
		'\x2', '\x2', '%', 'M', '\x3', '\x2', '\x2', '\x2', '\'', 'O', '\x3', 
		'\x2', '\x2', '\x2', ')', 'Q', '\x3', '\x2', '\x2', '\x2', '+', ',', '\t', 
		'\x2', '\x2', '\x2', ',', '\x4', '\x3', '\x2', '\x2', '\x2', '-', '.', 
		'\t', '\x3', '\x2', '\x2', '.', '\x6', '\x3', '\x2', '\x2', '\x2', '/', 
		'\x30', '\t', '\x4', '\x2', '\x2', '\x30', '\b', '\x3', '\x2', '\x2', 
		'\x2', '\x31', '\x32', '\t', '\x5', '\x2', '\x2', '\x32', '\n', '\x3', 
		'\x2', '\x2', '\x2', '\x33', '\x34', '\t', '\x6', '\x2', '\x2', '\x34', 
		'\f', '\x3', '\x2', '\x2', '\x2', '\x35', '\x36', '\t', '\a', '\x2', '\x2', 
		'\x36', '\xE', '\x3', '\x2', '\x2', '\x2', '\x37', '\x38', '\t', '\b', 
		'\x2', '\x2', '\x38', '\x10', '\x3', '\x2', '\x2', '\x2', '\x39', ':', 
		'\t', '\t', '\x2', '\x2', ':', '\x12', '\x3', '\x2', '\x2', '\x2', ';', 
		'<', '\t', '\n', '\x2', '\x2', '<', '\x14', '\x3', '\x2', '\x2', '\x2', 
		'=', '>', '\t', '\v', '\x2', '\x2', '>', '\x16', '\x3', '\x2', '\x2', 
		'\x2', '?', '@', '\t', '\f', '\x2', '\x2', '@', '\x18', '\x3', '\x2', 
		'\x2', '\x2', '\x41', '\x42', '\t', '\r', '\x2', '\x2', '\x42', '\x1A', 
		'\x3', '\x2', '\x2', '\x2', '\x43', '\x44', '\t', '\xE', '\x2', '\x2', 
		'\x44', '\x1C', '\x3', '\x2', '\x2', '\x2', '\x45', '\x46', '\t', '\xF', 
		'\x2', '\x2', '\x46', '\x1E', '\x3', '\x2', '\x2', '\x2', 'G', 'H', '\t', 
		'\x10', '\x2', '\x2', 'H', ' ', '\x3', '\x2', '\x2', '\x2', 'I', 'J', 
		'\t', '\x11', '\x2', '\x2', 'J', '\"', '\x3', '\x2', '\x2', '\x2', 'K', 
		'L', '\t', '\x12', '\x2', '\x2', 'L', '$', '\x3', '\x2', '\x2', '\x2', 
		'M', 'N', '\t', '\x13', '\x2', '\x2', 'N', '&', '\x3', '\x2', '\x2', '\x2', 
		'O', 'P', '\a', ')', '\x2', '\x2', 'P', '(', '\x3', '\x2', '\x2', '\x2', 
		'Q', 'R', '\v', '\x2', '\x2', '\x2', 'R', '*', '\x3', '\x2', '\x2', '\x2', 
		'\x3', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace CshPlgr.Collector.Generated
