//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CollectionGrammar.g4 by ANTLR 4.9.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace CshPlgr.Lib.Collector.Generated {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="CollectionGrammarParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.3")]
[System.CLSCompliant(false)]
public interface ICollectionGrammarListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CollectionGrammarParser.text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterText([NotNull] CollectionGrammarParser.TextContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CollectionGrammarParser.text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitText([NotNull] CollectionGrammarParser.TextContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CollectionGrammarParser.chank"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChank([NotNull] CollectionGrammarParser.ChankContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CollectionGrammarParser.chank"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChank([NotNull] CollectionGrammarParser.ChankContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CollectionGrammarParser.word"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWord([NotNull] CollectionGrammarParser.WordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CollectionGrammarParser.word"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWord([NotNull] CollectionGrammarParser.WordContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>largeAlpha</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLargeAlpha([NotNull] CollectionGrammarParser.LargeAlphaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>largeAlpha</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLargeAlpha([NotNull] CollectionGrammarParser.LargeAlphaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>largeEpsilon</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLargeEpsilon([NotNull] CollectionGrammarParser.LargeEpsilonContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>largeEpsilon</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLargeEpsilon([NotNull] CollectionGrammarParser.LargeEpsilonContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>largeEta</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLargeEta([NotNull] CollectionGrammarParser.LargeEtaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>largeEta</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLargeEta([NotNull] CollectionGrammarParser.LargeEtaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>largeIota</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLargeIota([NotNull] CollectionGrammarParser.LargeIotaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>largeIota</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLargeIota([NotNull] CollectionGrammarParser.LargeIotaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>largeOmicron</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLargeOmicron([NotNull] CollectionGrammarParser.LargeOmicronContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>largeOmicron</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLargeOmicron([NotNull] CollectionGrammarParser.LargeOmicronContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>largeUpsilon</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLargeUpsilon([NotNull] CollectionGrammarParser.LargeUpsilonContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>largeUpsilon</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLargeUpsilon([NotNull] CollectionGrammarParser.LargeUpsilonContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>largeOmega</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLargeOmega([NotNull] CollectionGrammarParser.LargeOmegaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>largeOmega</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLargeOmega([NotNull] CollectionGrammarParser.LargeOmegaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>largeRho</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLargeRho([NotNull] CollectionGrammarParser.LargeRhoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>largeRho</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLargeRho([NotNull] CollectionGrammarParser.LargeRhoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>largeConsonant</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLargeConsonant([NotNull] CollectionGrammarParser.LargeConsonantContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>largeConsonant</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLargeConsonant([NotNull] CollectionGrammarParser.LargeConsonantContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>smallAlpha</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSmallAlpha([NotNull] CollectionGrammarParser.SmallAlphaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>smallAlpha</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSmallAlpha([NotNull] CollectionGrammarParser.SmallAlphaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>smallEpsilon</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSmallEpsilon([NotNull] CollectionGrammarParser.SmallEpsilonContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>smallEpsilon</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSmallEpsilon([NotNull] CollectionGrammarParser.SmallEpsilonContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>smallEta</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSmallEta([NotNull] CollectionGrammarParser.SmallEtaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>smallEta</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSmallEta([NotNull] CollectionGrammarParser.SmallEtaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>smallIota</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSmallIota([NotNull] CollectionGrammarParser.SmallIotaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>smallIota</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSmallIota([NotNull] CollectionGrammarParser.SmallIotaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>smallOmicron</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSmallOmicron([NotNull] CollectionGrammarParser.SmallOmicronContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>smallOmicron</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSmallOmicron([NotNull] CollectionGrammarParser.SmallOmicronContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>smallUpsilon</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSmallUpsilon([NotNull] CollectionGrammarParser.SmallUpsilonContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>smallUpsilon</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSmallUpsilon([NotNull] CollectionGrammarParser.SmallUpsilonContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>smallOmega</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSmallOmega([NotNull] CollectionGrammarParser.SmallOmegaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>smallOmega</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSmallOmega([NotNull] CollectionGrammarParser.SmallOmegaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>smallRho</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSmallRho([NotNull] CollectionGrammarParser.SmallRhoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>smallRho</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSmallRho([NotNull] CollectionGrammarParser.SmallRhoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>smallConsonant</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSmallConsonant([NotNull] CollectionGrammarParser.SmallConsonantContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>smallConsonant</c>
	/// labeled alternative in <see cref="CollectionGrammarParser.alphabet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSmallConsonant([NotNull] CollectionGrammarParser.SmallConsonantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CollectionGrammarParser.otherwise"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOtherwise([NotNull] CollectionGrammarParser.OtherwiseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CollectionGrammarParser.otherwise"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOtherwise([NotNull] CollectionGrammarParser.OtherwiseContext context);
}
} // namespace CshPlgr.Lib.Collector.Generated
